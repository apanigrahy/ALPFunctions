usethis::git_sitrep()
usethis::use_git_config(user.name = "apanigrahy", user.email = "anandlpanigrahy@gmail.com")
usethis::git_sitrep()
usethis::create_github_token()
gitcreds::gitcreds_set("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")
gitcreds::gitcreds_set(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)
usethis::git_sitrep()
gitcreds::gitcreds_set()
usethis::git_sitrep()
library(usethis)
library(devtools)
use_r("gt_flex_table")
#' @param type_list
#' @param add_p
#' @param add_total_col
#' @param header_text
#' @param return_object
#'
#' @return
#' @export
#'
#' @examples
gt_flex_table <- function(data_frame,
group_by = NULL,
label_list = list(),
digits_list = list(),
value_list = list(),
type_list = list(),
add_p = FALSE,
add_total_col = FALSE,
header_text = "**Table 1: Insert Table Title**",
return_object = "flextable"){
# If label_list is empty, set to NULL
if(length(label_list) == 0){
label_list <- NULL
}
# If digits_list is empty, set to NULL
if(length(digits_list) == 0){
digits_list <- NULL
}
# If value_list is empty, set to NULL
if(length(value_list) == 0){
value_list <- NULL
}
# Append type_list if applicable
types <- list(all_continuous() ~ "continuous2",
all_dichotomous() ~ "categorical")
type_list <- c(types, type_list)
# Create initial gtsummary table
gt_tbl <- data_frame %>%
gtsummary::tbl_summary(
by = {{group_by}},
type = type_list,
label = label_list,
value = value_list,
statistic = list(all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}-{p75})",
"{min}-{max}"),
all_categorical() ~ "{n} ({p}%)"),
missing_text = "N Missing (%)",
missing_stat = "{N_miss} ({p_miss}%)"
)
# Add statistics with p-values if applicable
if(add_p == TRUE){
gt_tbl <- gt_tbl %>%
gtsummary::add_p()
}
# Add overall column if applicable
if(add_total_col == TRUE){
gt_tbl <- gt_tbl %>%
gtsummary::add_overall()
}
# Finalize gt table parameters and add header
gt_tbl <- gt_tbl %>%
gtsummary::add_stat_label(label = list(
all_continuous() ~ c("Mean (SD)", "Median (IQR)","Min-Max"),
all_categorical() ~"n (%)")) %>%
gtsummary::modify_header(label ~ "**Variable**",
all_stat_cols() ~ "**{level}**\n(n = {n})") %>%
gtsummary::modify_spanning_header(
everything() ~ header_text
) %>%
gtsummary::bold_labels()
# Remove the ", n%" from categorical variable labels
gt_tbl$table_body$stat_label <- NA
# Create and return flextable object if applicable
if(return_object == "flextable"){
tbl_flx <- gt_tbl %>% gtsummary::as_flex_table()
tbl_flx <- tbl_flx %>%
flextable::hline_top(border = fp_border_default(width = 0),
part = "header")  %>%
flextable::align(align = "center", part = "header") %>%
flextable::align(align = "center", part = "body",
j = c(2:length(cols))) %>%
flextable::align(align = "left", part = "body", j = 1) %>%
flextable::font(fontname = "Albany AMT", part = "all") %>%
flextable::fontsize(size = 12, part = "header") %>%
flextable::fontsize(size = 10, part = "body") %>%
flextable::fontsize(size = 10, part = "footer")
return(tbl_flx)
}else{
return(gt_tbl)
}
}
